import { useEffect, useState } from "react";

// import focus from "../icons/focus.svg";
// import shortBreak from "../icons/shortBreak.svg";
// import longBreak from "../icons/longBreak.svg";
// import dots from "../icons/dots.svg";
// import play from "../icons/play.svg";
// import next from "../icons/next.svg";
// import pause from "../icons/pause.svg";

import classes from "./Timer.module.scss";
import Settings from "./Settings";

const Timer = (props: any) => {
  const [stage, setStage] = useState(0);

  const stages = ["focus", "short break", "long break"];

  const [focusTime, setFocusTime] = useState(25);
  const [shortBreakTime, setShortBreakTime] = useState(5);
  const [longBreakTime, setLongBreakTime] = useState(10);

  const [minutes, setMinutes] = useState<any>("25");
  const [seconds, setSeconds] = useState<any>("0");
  const [isTimerOn, setIsTimerOn] = useState(false);
  const [isSettings, setISSettings] = useState(false);
  // const [isThemeDark, setIsThemeDark] = useState(false);
  const [isThemeDark, setIsThemeDark] = useState(
    localStorage.getItem("isDark") === "true" ? true : false
  );

  const handleStage = () => {
    handleTimer(false);
    setStage((prev) => {
      if (prev === 2) {
        props.handleStage(0);
        return 0;
      } else {
        props.handleStage(prev + 1);
        return prev + 1;
      }
    });
  };

  const handleTimer = (val: boolean) => {
    setIsTimerOn(val);
  };
  const handleSettings = () => {
    setISSettings((prev) => !prev);
  };
  const handleTheme = () => {
    props.handleTheme();
    setIsThemeDark((prev) => !prev);
  };

  const handleFocusTime = (val: number) => {
    setFocusTime(val);
  };
  const handleShortBreakTime = (val: number) => {
    setShortBreakTime(val);
  };
  const handleLongBreakTime = (val: number) => {
    setLongBreakTime(val);
  };

  useEffect(() => {
    let min = +minutes;
    let sec = +seconds;

    let interval: any = null;
    if (isTimerOn) {
      interval = setInterval(() => {
        if (sec === 0) {
          min = min - 1;
          sec = 60;
        }
        sec--;
        setMinutes("" + min);
        setSeconds("" + sec);
      }, 1000);
    }
    return () => clearInterval(interval);
  }, [isTimerOn]);

  useEffect(() => {
    let min: number = 0;
    if (stage === 0) min = focusTime;
    if (stage === 1) min = shortBreakTime;
    if (stage === 2) min = longBreakTime;

    setMinutes("" + min);

    if (stage == 0) {
      setMinutes("" + focusTime);
      setSeconds("0");
    }

    if (stage == 1) {
      setMinutes("" + shortBreakTime);
      setSeconds("0");
    }

    if (stage == 2) {
      setMinutes("" + longBreakTime);
      setSeconds("0");
    }
  }, [focusTime, stage]);
  useEffect(() => {
    if (minutes === "0" && seconds === "0") {
      console.log("end");
      handleStage();
    }
  }, [seconds]);

  return (
    <div
      className={`${classes.timer} ${stage === 0 ? classes.focus : ""} ${
        stage === 1 ? classes.shortBreak : ""
      } ${stage === 2 ? classes.longBreak : ""} ${
        stage === 0 && isThemeDark ? classes.focusDark : ""
      } ${stage === 1 && isThemeDark ? classes.shortBreakDark : ""} ${
        stage === 2 && isThemeDark ? classes.longBreakDark : ""
      }`}
    >
      <div className={classes.stage}>
        {stage === 0 && (
          <svg
            width="32"
            height="32"
            viewBox="0 0 32 32"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className={classes.icon}
          >
            <path
              d="M31 16.5C31.0001 15.1753 30.6242 13.8777 29.9162 12.7581C29.2081 11.6385 28.1969 10.7427 27 10.175V9C26.9991 7.71141 26.5834 6.45735 25.8144 5.42339C25.0454 4.38943 23.9639 3.63052 22.73 3.25896C21.4962 2.8874 20.1755 2.92294 18.9634 3.36032C17.7513 3.7977 16.7123 4.61368 16 5.6875C15.2877 4.61368 14.2486 3.7977 13.0365 3.36032C11.8244 2.92294 10.5037 2.8874 9.26989 3.25896C8.03603 3.63052 6.95458 4.38943 6.18557 5.42339C5.41656 6.45735 5.00085 7.71141 4.99996 9V10.175C3.80288 10.7426 2.79146 11.6383 2.08322 12.7579C1.37499 13.8775 0.999023 15.1752 0.999023 16.5C0.999023 17.8248 1.37499 19.1225 2.08322 20.2421C2.79146 21.3617 3.80288 22.2574 4.99996 22.825V23C5.00085 24.2886 5.41656 25.5426 6.18557 26.5766C6.95458 27.6106 8.03603 28.3695 9.26989 28.741C10.5037 29.1126 11.8244 29.0771 13.0365 28.6397C14.2486 28.2023 15.2877 27.3863 16 26.3125C16.7123 27.3863 17.7513 28.2023 18.9634 28.6397C20.1755 29.0771 21.4962 29.1126 22.73 28.741C23.9639 28.3695 25.0454 27.6106 25.8144 26.5766C26.5834 25.5426 26.9991 24.2886 27 23V22.825C28.1959 22.2561 29.2063 21.36 29.9142 20.2407C30.6221 19.1213 30.9986 17.8244 31 16.5ZM11 27C10.0131 26.9994 9.06126 26.634 8.3275 25.9741C7.59373 25.3142 7.12982 24.4063 7.02496 23.425C7.34746 23.4758 7.67349 23.5009 7.99996 23.5H8.99996C9.26518 23.5 9.51953 23.3946 9.70707 23.2071C9.89461 23.0196 9.99996 22.7652 9.99996 22.5C9.99996 22.2348 9.89461 21.9804 9.70707 21.7929C9.51953 21.6054 9.26518 21.5 8.99996 21.5H7.99996C6.82161 21.498 5.68183 21.0799 4.78171 20.3194C3.88158 19.559 3.27896 18.5051 3.08015 17.3436C2.88134 16.1821 3.09913 14.9878 3.69508 13.9712C4.29104 12.9547 5.22686 12.1813 6.33746 11.7875C6.53179 11.7159 6.6995 11.5865 6.81796 11.4166C6.93642 11.2467 6.99995 11.0446 6.99996 10.8375V9C6.99996 7.93913 7.42139 6.92172 8.17154 6.17157C8.92168 5.42143 9.9391 5 11 5C12.0608 5 13.0782 5.42143 13.8284 6.17157C14.5785 6.92172 15 7.93913 15 9V18.5375C13.9052 17.5439 12.4784 16.9955 11 17C10.7347 17 10.4804 17.1054 10.2929 17.2929C10.1053 17.4804 9.99996 17.7348 9.99996 18C9.99996 18.2652 10.1053 18.5196 10.2929 18.7071C10.4804 18.8946 10.7347 19 11 19C12.0608 19 13.0782 19.4214 13.8284 20.1716C14.5785 20.9217 15 21.9391 15 23C15 24.0609 14.5785 25.0783 13.8284 25.8284C13.0782 26.5786 12.0608 27 11 27ZM24 21.5H23C22.7348 21.5 22.4804 21.6054 22.2929 21.7929C22.1053 21.9804 22 22.2348 22 22.5C22 22.7652 22.1053 23.0196 22.2929 23.2071C22.4804 23.3946 22.7348 23.5 23 23.5H24C24.3264 23.5009 24.6525 23.4758 24.975 23.425C24.8928 24.1937 24.5897 24.9222 24.1022 25.5222C23.6147 26.1223 22.9638 26.5682 22.2282 26.806C21.4926 27.0438 20.7038 27.0634 19.9573 26.8624C19.2108 26.6613 18.5386 26.2482 18.0219 25.6731C17.5053 25.0979 17.1664 24.3854 17.0462 23.6217C16.9261 22.858 17.0298 22.0758 17.3449 21.3699C17.6599 20.6639 18.1728 20.0643 18.8215 19.6437C19.4702 19.2231 20.2269 18.9995 21 19C21.2652 19 21.5195 18.8946 21.7071 18.7071C21.8946 18.5196 22 18.2652 22 18C22 17.7348 21.8946 17.4804 21.7071 17.2929C21.5195 17.1054 21.2652 17 21 17C19.5215 16.9955 18.0948 17.5439 17 18.5375V9C17 7.93913 17.4214 6.92172 18.1715 6.17157C18.9217 5.42143 19.9391 5 21 5C22.0608 5 23.0782 5.42143 23.8284 6.17157C24.5785 6.92172 25 7.93913 25 9V10.8375C25 11.0446 25.0635 11.2467 25.182 11.4166C25.3004 11.5865 25.4681 11.7159 25.6625 11.7875C26.7731 12.1813 27.7089 12.9547 28.3048 13.9712C28.9008 14.9878 29.1186 16.1821 28.9198 17.3436C28.721 18.5051 28.1183 19.559 27.2182 20.3194C26.3181 21.0799 25.1783 21.498 24 21.5ZM7.49996 16C7.23475 16 6.98039 15.8946 6.79286 15.7071C6.60532 15.5196 6.49996 15.2652 6.49996 15C6.49996 14.7348 6.60532 14.4804 6.79286 14.2929C6.98039 14.1054 7.23475 14 7.49996 14C8.16199 13.9967 8.79597 13.7323 9.2641 13.2641C9.73223 12.796 9.99668 12.162 9.99996 11.5V10.5C9.99996 10.2348 10.1053 9.98043 10.2929 9.79289C10.4804 9.60536 10.7347 9.5 11 9.5C11.2652 9.5 11.5195 9.60536 11.7071 9.79289C11.8946 9.98043 12 10.2348 12 10.5V11.5C12 12.6935 11.5259 13.8381 10.6819 14.682C9.83803 15.5259 8.69344 16 7.49996 16ZM25.5 15C25.5 15.2652 25.3946 15.5196 25.2071 15.7071C25.0195 15.8946 24.7652 16 24.5 16C23.3065 16 22.1619 15.5259 21.318 14.682C20.4741 13.8381 20 12.6935 20 11.5V10.5C20 10.2348 20.1053 9.98043 20.2929 9.79289C20.4804 9.60536 20.7348 9.5 21 9.5C21.2652 9.5 21.5195 9.60536 21.7071 9.79289C21.8946 9.98043 22 10.2348 22 10.5V11.5C22.0033 12.162 22.2677 12.796 22.7358 13.2641C23.204 13.7323 23.8379 13.9967 24.5 14C24.7652 14 25.0195 14.1054 25.2071 14.2929C25.3946 14.4804 25.5 14.7348 25.5 15Z"
              fill="#471515"
            />
          </svg>
        )}

        {stage === 1 && (
          <svg
            width="28"
            height="26"
            viewBox="0 0 28 26"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className={classes.icon}
          >
            <path
              d="M7 5V1C7 0.734784 7.10536 0.48043 7.29289 0.292893C7.48043 0.105357 7.73478 0 8 0C8.26522 0 8.51957 0.105357 8.70711 0.292893C8.89464 0.48043 9 0.734784 9 1V5C9 5.26522 8.89464 5.51957 8.70711 5.70711C8.51957 5.89464 8.26522 6 8 6C7.73478 6 7.48043 5.89464 7.29289 5.70711C7.10536 5.51957 7 5.26522 7 5ZM12 6C12.2652 6 12.5196 5.89464 12.7071 5.70711C12.8946 5.51957 13 5.26522 13 5V1C13 0.734784 12.8946 0.48043 12.7071 0.292893C12.5196 0.105357 12.2652 0 12 0C11.7348 0 11.4804 0.105357 11.2929 0.292893C11.1054 0.48043 11 0.734784 11 1V5C11 5.26522 11.1054 5.51957 11.2929 5.70711C11.4804 5.89464 11.7348 6 12 6ZM16 6C16.2652 6 16.5196 5.89464 16.7071 5.70711C16.8946 5.51957 17 5.26522 17 5V1C17 0.734784 16.8946 0.48043 16.7071 0.292893C16.5196 0.105357 16.2652 0 16 0C15.7348 0 15.4804 0.105357 15.2929 0.292893C15.1054 0.48043 15 0.734784 15 1V5C15 5.26522 15.1054 5.51957 15.2929 5.70711C15.4804 5.89464 15.7348 6 16 6ZM28 13V14C27.9993 15.2715 27.5142 16.495 26.6434 17.4215C25.7726 18.3481 24.5815 18.908 23.3125 18.9875C22.6237 20.9139 21.4634 22.6372 19.9375 24H23C23.2652 24 23.5196 24.1054 23.7071 24.2929C23.8946 24.4804 24 24.7348 24 25C24 25.2652 23.8946 25.5196 23.7071 25.7071C23.5196 25.8946 23.2652 26 23 26H1C0.734784 26 0.48043 25.8946 0.292893 25.7071C0.105357 25.5196 0 25.2652 0 25C0 24.7348 0.105357 24.4804 0.292893 24.2929C0.48043 24.1054 0.734784 24 1 24H4.0625C2.78816 22.8718 1.76726 21.4865 1.06704 19.9352C0.366819 18.384 0.0031558 16.702 0 15V9C0 8.73478 0.105357 8.48043 0.292893 8.29289C0.48043 8.10536 0.734784 8 1 8H23C24.3261 8 25.5979 8.52678 26.5355 9.46447C27.4732 10.4021 28 11.6739 28 13ZM22 10H2V15C2.00406 16.8772 2.53448 18.7157 3.53101 20.3066C4.52753 21.8975 5.95023 23.1771 7.6375 24H16.3625C17.6229 23.384 18.7402 22.5107 19.6423 21.4364C20.5445 20.362 21.2114 19.1105 21.6 17.7625C21.6139 17.7397 21.6225 17.7141 21.625 17.6875C21.8763 16.8139 22.0025 15.909 22 15V10ZM26 13C25.9993 12.3802 25.8066 11.7758 25.4485 11.27C25.0904 10.7641 24.5844 10.3816 24 10.175V15C24.0008 15.628 23.9506 16.2551 23.85 16.875C24.4705 16.6917 25.015 16.3127 25.4025 15.7946C25.79 15.2765 25.9996 14.647 26 14V13Z"
              fill="#14401D"
            />
          </svg>
        )}

        {stage === 2 && (
          <svg
            width="28"
            height="26"
            viewBox="0 0 28 26"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className={classes.icon}
          >
            <path
              d="M7 5V1C7 0.734784 7.10536 0.48043 7.29289 0.292893C7.48043 0.105357 7.73478 0 8 0C8.26522 0 8.51957 0.105357 8.70711 0.292893C8.89464 0.48043 9 0.734784 9 1V5C9 5.26522 8.89464 5.51957 8.70711 5.70711C8.51957 5.89464 8.26522 6 8 6C7.73478 6 7.48043 5.89464 7.29289 5.70711C7.10536 5.51957 7 5.26522 7 5ZM12 6C12.2652 6 12.5196 5.89464 12.7071 5.70711C12.8946 5.51957 13 5.26522 13 5V1C13 0.734784 12.8946 0.48043 12.7071 0.292893C12.5196 0.105357 12.2652 0 12 0C11.7348 0 11.4804 0.105357 11.2929 0.292893C11.1054 0.48043 11 0.734784 11 1V5C11 5.26522 11.1054 5.51957 11.2929 5.70711C11.4804 5.89464 11.7348 6 12 6ZM16 6C16.2652 6 16.5196 5.89464 16.7071 5.70711C16.8946 5.51957 17 5.26522 17 5V1C17 0.734784 16.8946 0.48043 16.7071 0.292893C16.5196 0.105357 16.2652 0 16 0C15.7348 0 15.4804 0.105357 15.2929 0.292893C15.1054 0.48043 15 0.734784 15 1V5C15 5.26522 15.1054 5.51957 15.2929 5.70711C15.4804 5.89464 15.7348 6 16 6ZM28 13V14C27.9993 15.2715 27.5142 16.495 26.6434 17.4215C25.7726 18.3481 24.5815 18.908 23.3125 18.9875C22.6237 20.9139 21.4634 22.6372 19.9375 24H23C23.2652 24 23.5196 24.1054 23.7071 24.2929C23.8946 24.4804 24 24.7348 24 25C24 25.2652 23.8946 25.5196 23.7071 25.7071C23.5196 25.8946 23.2652 26 23 26H1C0.734784 26 0.48043 25.8946 0.292893 25.7071C0.105357 25.5196 0 25.2652 0 25C0 24.7348 0.105357 24.4804 0.292893 24.2929C0.48043 24.1054 0.734784 24 1 24H4.0625C2.78816 22.8718 1.76726 21.4865 1.06704 19.9352C0.366819 18.384 0.0031558 16.702 0 15V9C0 8.73478 0.105357 8.48043 0.292893 8.29289C0.48043 8.10536 0.734784 8 1 8H23C24.3261 8 25.5979 8.52678 26.5355 9.46447C27.4732 10.4021 28 11.6739 28 13ZM22 10H2V15C2.00406 16.8772 2.53448 18.7157 3.53101 20.3066C4.52753 21.8975 5.95023 23.1771 7.6375 24H16.3625C17.6229 23.384 18.7402 22.5107 19.6423 21.4364C20.5445 20.362 21.2114 19.1105 21.6 17.7625C21.6139 17.7397 21.6225 17.7141 21.625 17.6875C21.8763 16.8139 22.0025 15.909 22 15V10ZM26 13C25.9993 12.3802 25.8066 11.7758 25.4485 11.27C25.0904 10.7641 24.5844 10.3816 24 10.175V15C24.0008 15.628 23.9506 16.2551 23.85 16.875C24.4705 16.6917 25.015 16.3127 25.4025 15.7946C25.79 15.2765 25.9996 14.647 26 14V13Z"
              fill="#153047"
            />
          </svg>
        )}

        <span>{stages[stage]}</span>
      </div>
      <div className={classes.countdown}>
        <div className={classes.minutes}>{minutes.padStart(2, 0)}</div>
        <div className={classes.seconds}>{seconds.padStart(2, 0)}</div>
      </div>
      <div className={classes.buttons}>
        <button
          className={classes["btn-small"]}
          onClick={() => {
            setISSettings((prev) => !prev);
          }}
        >
          <svg
            width="28"
            height="8"
            viewBox="0 0 28 8"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className={classes["btn-icon"]}
          >
            <path
              d="M17.5 4C17.5 4.69223 17.2947 5.36892 16.9101 5.94449C16.5256 6.52007 15.9789 6.96867 15.3394 7.23357C14.6999 7.49848 13.9961 7.56779 13.3172 7.43275C12.6383 7.2977 12.0146 6.96435 11.5251 6.47487C11.0356 5.98539 10.7023 5.36175 10.5673 4.68281C10.4322 4.00388 10.5015 3.30015 10.7664 2.66061C11.0313 2.02107 11.4799 1.47444 12.0555 1.08986C12.6311 0.705271 13.3078 0.5 14 0.5C14.9272 0.503294 15.8156 0.873101 16.4712 1.52877C17.1269 2.18443 17.4967 3.07275 17.5 4ZM4 0.5C3.30777 0.5 2.63108 0.705271 2.05551 1.08986C1.47993 1.47444 1.03133 2.02107 0.766423 2.66061C0.501516 3.30015 0.432205 4.00388 0.567253 4.68281C0.702301 5.36175 1.03564 5.98539 1.52513 6.47487C2.01461 6.96435 2.63825 7.2977 3.31719 7.43275C3.99612 7.56779 4.69985 7.49848 5.33939 7.23357C5.97894 6.96867 6.52556 6.52007 6.91015 5.94449C7.29473 5.36892 7.5 4.69223 7.5 4C7.49671 3.07275 7.1269 2.18443 6.47124 1.52877C5.81557 0.873101 4.92725 0.503294 4 0.5ZM24 0.5C23.3078 0.5 22.6311 0.705271 22.0555 1.08986C21.4799 1.47444 21.0313 2.02107 20.7664 2.66061C20.5015 3.30015 20.4322 4.00388 20.5673 4.68281C20.7023 5.36175 21.0356 5.98539 21.5251 6.47487C22.0146 6.96435 22.6383 7.2977 23.3172 7.43275C23.9961 7.56779 24.6999 7.49848 25.3394 7.23357C25.9789 6.96867 26.5256 6.52007 26.9101 5.94449C27.2947 5.36892 27.5 4.69223 27.5 4C27.4967 3.07275 27.1269 2.18443 26.4712 1.52877C25.8156 0.873101 24.9272 0.503294 24 0.5Z"
              fill="#471515"
            />
          </svg>
        </button>
        <button
          className={classes["btn-big"]}
          onClick={() => {
            handleTimer(!isTimerOn);
          }}
        >
          {isTimerOn && (
            <svg
              width="22"
              height="24"
              viewBox="0 0 22 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className={classes["btn-icon"]}
            >
              <path
                d="M22 2V22C22 22.5304 21.7893 23.0391 21.4142 23.4142C21.0391 23.7893 20.5304 24 20 24H15.5C14.9696 24 14.4609 23.7893 14.0858 23.4142C13.7107 23.0391 13.5 22.5304 13.5 22V2C13.5 1.46957 13.7107 0.960859 14.0858 0.585786C14.4609 0.210714 14.9696 0 15.5 0H20C20.5304 0 21.0391 0.210714 21.4142 0.585786C21.7893 0.960859 22 1.46957 22 2ZM6.5 0H2C1.46957 0 0.960859 0.210714 0.585786 0.585786C0.210714 0.960859 0 1.46957 0 2V22C0 22.5304 0.210714 23.0391 0.585786 23.4142C0.960859 23.7893 1.46957 24 2 24H6.5C7.03043 24 7.53914 23.7893 7.91421 23.4142C8.28929 23.0391 8.5 22.5304 8.5 22V2C8.5 1.46957 8.28929 0.960859 7.91421 0.585786C7.53914 0.210714 7.03043 0 6.5 0Z"
                fill="#471515"
              />
            </svg>
          )}
          {!isTimerOn && (
            <svg
              width="22"
              height="26"
              viewBox="0 0 22 26"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className={classes["btn-icon"]}
            >
              <path
                d="M22 13C21.9993 13.3439 21.9104 13.6818 21.7419 13.9816C21.5734 14.2814 21.3309 14.533 21.0375 14.7125L3.03751 25.7C2.73768 25.89 2.39141 25.9939 2.03651 26.0006C1.68161 26.0072 1.33171 25.9162 1.02501 25.7375C0.713773 25.5667 0.454317 25.3152 0.27394 25.0095C0.0935623 24.7037 -0.00106682 24.355 9.07295e-06 24V1.99996C-0.00106682 1.64496 0.0935623 1.29623 0.27394 0.990471C0.454317 0.684709 0.713773 0.433218 1.02501 0.26246C1.33171 0.0837584 1.68161 -0.00725329 2.03651 -0.000640198C2.39141 0.00597289 2.73768 0.109956 3.03751 0.29996L21.0375 11.2875C21.3309 11.4669 21.5734 11.7185 21.7419 12.0183C21.9104 12.3181 21.9993 12.6561 22 13Z"
                fill="#471515"
              />
            </svg>
          )}
        </button>
        <button className={classes["btn-small"]} onClick={handleStage}>
          <svg
            width="30"
            height="20"
            viewBox="0 0 30 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className={classes["btn-icon"]}
          >
            <path
              d="M29.65 10C29.6515 10.3352 29.5688 10.6654 29.4093 10.9603C29.2499 11.2552 29.0189 11.5052 28.7375 11.6875L17.5875 18.85C17.2849 19.0461 16.935 19.1567 16.5747 19.1701C16.2144 19.1836 15.8572 19.0994 15.5408 18.9265C15.2244 18.7536 14.9607 18.4984 14.7775 18.1878C14.5943 17.8773 14.4984 17.523 14.5 17.1625V11.8375L3.58752 18.85C3.28494 19.0461 2.93499 19.1567 2.5747 19.1701C2.21441 19.1836 1.85717 19.0994 1.5408 18.9265C1.22443 18.7536 0.960685 18.4984 0.777472 18.1878C0.59426 17.8773 0.498395 17.523 0.50002 17.1625V2.83751C0.498395 2.47697 0.59426 2.1227 0.777472 1.81218C0.960685 1.50165 1.22443 1.24643 1.5408 1.07352C1.85717 0.9006 2.21441 0.816421 2.5747 0.829887C2.93499 0.843352 3.28494 0.953961 3.58752 1.15001L14.5 8.16251V2.83751C14.4984 2.47697 14.5943 2.1227 14.7775 1.81218C14.9607 1.50165 15.2244 1.24643 15.5408 1.07352C15.8572 0.9006 16.2144 0.816421 16.5747 0.829887C16.935 0.843352 17.2849 0.953961 17.5875 1.15001L28.7375 8.31251C29.0189 8.49478 29.2499 8.74484 29.4093 9.03971C29.5688 9.33458 29.6515 9.66479 29.65 10Z"
              fill="#471515"
            />
          </svg>
        </button>
      </div>
      {isSettings && (
        <Settings
          handleSettings={handleSettings}
          handleTheme={handleTheme}
          isDarkMode={isThemeDark}
          handleFocusTime={handleFocusTime}
          handleShortBreakTime={handleShortBreakTime}
          handleLongBreakTime={handleLongBreakTime}
          focusTime={focusTime}
          shortBreakTime={shortBreakTime}
          longBreakTime={longBreakTime}
        />
      )}
    </div>
  );
};

export default Timer;
